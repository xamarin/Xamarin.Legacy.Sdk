# https://aka.ms/yaml

trigger:
- main

resources:
  repositories:
  - repository: templates
    type: github
    name: xamarin/yaml-templates
    ref: refs/heads/main
    endpoint: xamarin

variables:
  - group: Xamarin-Secrets
  - group: Xamarin Release
  - name: Configuration
    value: Release
  - name: DotNetVersion
    value: 6.0.100
  - name: BootsVersion
    value: 1.0.4.624
  - name: DotNet.Cli.Telemetry.OptOut
    value: true
  - name: DotNet.Workloads
    value: android ios macos

jobs:

- job: windows
  pool:
    vmImage: windows-2022
    demands: msbuild
  steps:
  - task: JavaToolInstaller@0
    displayName: install JDK 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
      & .\dotnet-install.ps1 -Version $(DotNetVersion) -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
      & dotnet --list-sdks
    displayName: install .NET $(DotNetVersion)
  - powershell: |
      & dotnet workload install $(DotNet.Workloads) --verbosity diag
    displayName: install .NET workloads
  - powershell: |
      & dotnet tool update --global boots --version $(BootsVersion)
      & boots --preview Xamarin.Android
    displayName: install Xamarin.Android
  - script: dotnet build Xamarin.Legacy.Sdk.sln -bl:$(System.DefaultWorkingDirectory)/bin/Xamarin.Legacy.Sdk.binlog
    displayName: build SDK
  - script: dotnet build samples/samples.sln -bl:$(System.DefaultWorkingDirectory)/bin/samples.binlog
    displayName: build samples
  - task: PublishPipelineArtifact@1
    displayName: artifacts
    inputs:
      artifact: windows
      targetPath: bin
    condition: succeededOrFailed()
  # NOTE: that PublishBuildArtifacts is required for signing
  - task: PublishBuildArtifacts@1
    displayName: nuget-unsigned
    inputs:
      artifactName: nuget-unsigned
      pathToPublish: bin/Release
    condition: succeededOrFailed()

# Builds with MSBuild from VS
- job: vs
  pool:
    vmImage: windows-2022
    demands: msbuild
  steps:
  - task: JavaToolInstaller@0
    displayName: install JDK 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
      & .\dotnet-install.ps1 -Version $(DotNetVersion) -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
      & dotnet --list-sdks
    displayName: install .NET $(DotNetVersion)
  - powershell: |
      & dotnet workload install $(DotNet.Workloads) --verbosity diag
    displayName: install .NET workloads
  - powershell: |
      & dotnet tool update --global boots --version $(BootsVersion)
      & boots --preview Xamarin.Android
    displayName: install Xamarin.Android
  - task: MSBuild@1
    inputs:
      solution: Xamarin.Legacy.Sdk.sln
      msbuildArguments: -restore -bl:$(System.DefaultWorkingDirectory)/bin/Xamarin.Legacy.Sdk.binlog
    displayName: build SDK
  - task: MSBuild@1
    inputs:
      solution: samples/samples.sln
      msbuildArguments: -restore -bl:$(System.DefaultWorkingDirectory)/bin/samples.binlog
    displayName: build samples
  - task: PublishPipelineArtifact@1
    displayName: artifacts
    inputs:
      artifact: vs
      targetPath: bin
    condition: succeededOrFailed()

- template: sign-artifacts/jobs/v2.yml@templates
  parameters:
    displayName: sign
    artifactName: nuget-unsigned
    dependsOn: windows
    condition: ne(variables['Build.Reason'], 'PullRequest')
