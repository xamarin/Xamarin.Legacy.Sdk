# https://aka.ms/yaml

trigger:
- main

resources:
  repositories:
  - repository: templates
    type: github
    name: xamarin/yaml-templates
    ref: refs/heads/main
    endpoint: xamarin

variables:
  - group: Xamarin-Secrets
  - group: Xamarin Release
  - name: Configuration
    value: Release
  - name: DotNetVersion
    value: 6.0.100-preview.1.21081.5
  - name: DotNet.Cli.Telemetry.OptOut
    value: true
  - name: Android.Msi
    value: https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/net6/4435786/master/abea285994fb4366de7c6c5e1ae9cc9ee22145dd/Microsoft.NET.Workload.Android.11.0.200.72.msi
  - name: Android.Pkg
    value: https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/net6/4435786/master/abea285994fb4366de7c6c5e1ae9cc9ee22145dd/Microsoft.NET.Workload.Android-11.0.200-ci.master.72.pkg
  - name: Xamarin.Android.Vsix
    value: https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/4435786/master/abea285994fb4366de7c6c5e1ae9cc9ee22145dd/signed/Xamarin.Android.Sdk-11.2.99.72.vsix
  - name: Xamarin.Android.Pkg
    value: https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/4435786/master/abea285994fb4366de7c6c5e1ae9cc9ee22145dd/xamarin.android-11.2.99.72.pkg
  - name: iOS.Msi
    value: https://bosstoragemirror.azureedge.net/wrench/main/43a294f512d0a68c7b2649c620094a196d6c16f8/4440962/package/Microsoft.NET.Workload.iOS.14.3.100-ci.main.1050.msi
  - name: iOS.Pkg
    value: https://bosstoragemirror.azureedge.net/wrench/main/43a294f512d0a68c7b2649c620094a196d6c16f8/4440962/package/Microsoft.iOS.Bundle.14.3.100-ci.main.1050.pkg

jobs:

- job: windows
  pool:
    vmImage: windows-latest
    demands: msbuild
  steps:
  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
      & .\dotnet-install.ps1 -Version $(DotNetVersion) -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
      & dotnet --list-sdks
    displayName: install .NET $(DotNetVersion)
  - powershell: |
      & dotnet tool install --global boots
      & boots $(Android.Msi)
      & boots $(iOS.Msi)
    displayName: install .NET workloads
  - powershell: |
      & boots $(Xamarin.Android.Vsix)
    displayName: install Xamarin.Android
  - script: dotnet build Xamarin.Legacy.Sdk.sln -bl:$(System.DefaultWorkingDirectory)/bin/Xamarin.Legacy.Sdk.binlog
    displayName: build SDK
  - script: dotnet build samples/samples.sln -bl:$(System.DefaultWorkingDirectory)/bin/samples.binlog
    displayName: build samples
  - task: PublishPipelineArtifact@1
    displayName: artifacts
    inputs:
      artifact: windows
      targetPath: bin
    condition: succeededOrFailed()
  # NOTE: that PublishBuildArtifacts is required for signing
  - task: PublishBuildArtifacts@1
    displayName: nuget-unsigned
    inputs:
      artifactName: nuget-unsigned
      pathToPublish: bin/Release
    condition: succeededOrFailed()

- job: mac
  pool:
    vmImage: macOS-latest
    demands: msbuild
  variables:
    DotNet.Root: /usr/local/share/dotnet/
    DotNet.Tools: ~/.dotnet/tools
  steps:
  - bash: >
      export PATH="$(DotNet.Root):$(DotNet.Tools):$PATH" &&
      curl -L https://dot.net/v1/dotnet-install.sh > dotnet-install.sh &&
      sh dotnet-install.sh --version $(DotNetVersion) --install-dir $DOTNET_ROOT --verbose &&
      dotnet --list-sdks &&
      echo "##vso[task.setvariable variable=PATH]$PATH"
    displayName: install .NET $(DotNetVersion)
  - bash: >
      dotnet tool install --global boots &&
      boots $(Android.Pkg) &&
      boots $(iOS.Pkg)
    displayName: install .NET workloads
  - bash: boots $(Xamarin.Android.Pkg)
    displayName: install Xamarin.Android
  - script: dotnet build Xamarin.Legacy.Sdk.sln -bl:$(System.DefaultWorkingDirectory)/bin/Xamarin.Legacy.Sdk.binlog
    displayName: build SDK
  - script: dotnet build samples/samples.sln -bl:$(System.DefaultWorkingDirectory)/bin/samples.binlog
    displayName: build samples
  - task: PublishPipelineArtifact@1
    displayName: artifacts
    inputs:
      artifact: mac
      targetPath: bin
    condition: succeededOrFailed()

- template: sign-artifacts/jobs/v2.yml@templates
  parameters:
    displayName: sign
    artifactName: nuget-unsigned
    dependsOn: windows
